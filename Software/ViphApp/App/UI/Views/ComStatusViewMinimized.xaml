<!-- ComStatusViewMinimized.xaml - ViphApp (C) motion phantom application.
 * Copyright (C) 2018-2020 by Stefan Grimm
 *
 * This is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public License
 * along with the SoftDKb software.  If not, see
 *<http://www.gnu.org/licenses/> .
 -->

<UserControl x:Class="ViphApp.App.UI.Views.ComStatusViewMinimized"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="30" d:DesignWidth="800">

  <UserControl.Resources>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <Border x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="0"
                BorderThickness="1">
          <Border.BorderBrush>
            <SolidColorBrush Color="White" />
          </Border.BorderBrush>
          <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF1F1F1F" />
                  <GradientStop Color="#FF1F1F1F" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Border Grid.Column="0"
                CornerRadius="2,0,0,2"
                Background="#FF1F1F1F"
                Margin="1" >
        </Border>
        <Path x:Name="Arrow"
              Grid.Column="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z" >
          <Path.Fill>
            <SolidColorBrush Color="White"/>
          </Path.Fill>
        </Path>
      </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBoxItem">
            <Border>
              <Label Foreground="White" FontWeight="Bold" Background="#FF1F1F1F">
                <ContentPresenter />
              </Label>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
      <Setter Property="TextElement.Foreground" Value="White" />
      <Setter Property="TextElement.FontWeight" Value="Bold" />
      <Setter Property="SnapsToDevicePixels" Value="true" />
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
      <Setter Property="MinWidth" Value="120" />
      <Setter Property="MinHeight" Value="20" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBox}">
            <Grid>              
              <ToggleButton x:Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left">
              </ContentPresenter>
              <Popup x:Name="Popup"
                     Placement="Bottom"
                     IsOpen="{TemplateBinding IsDropDownOpen}"
                     AllowsTransparency="True"
                     Focusable="False"
                     PopupAnimation="Slide">
                <Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                  <Border x:Name="DropDownBorder"
                          BorderThickness="1">
                    <Border.BorderBrush>
                      <SolidColorBrush Color="White" />
                    </Border.BorderBrush>
                    <Border.Background>
                      <SolidColorBrush Color="#FF1F1F1F" />
                    </Border.Background>
                  </Border>
                  <ScrollViewer Margin="4,6,4,6"
                                SnapsToDevicePixels="True">
                    <StackPanel IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Grid>
              </Popup>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
              </Trigger>
              <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
              </Trigger>
              <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </UserControl.Resources>

  <StackPanel Height="30" 
              Orientation="Horizontal">
    <Button Width="30" 
            Background="Transparent"
            BorderBrush="Transparent"
            Command="{Binding Status.DoShowStatusDetails}">
      <Image Source="pack://application:,,,/ViphApp.Common;component/UI/Icons/ArrowUp.png" />
    </Button>
    <Label Foreground="White" FontWeight="Bold" Content="Port:"/>
    <ComboBox Width="100" 
              ItemsSource="{Binding Status.SerialPorts, Mode=OneWay}"    
              SelectedItem="{Binding Status.SelectedSerialPort, Mode=TwoWay}" />

    <Button Content="Refresh" 
            Background="Transparent" Foreground="White" FontWeight="Bold"
            Command="{Binding Status.DoRefreshSerialPorts}"/>
    <ToggleButton Content="Connect" 
              Foreground="White" 
              Background="Transparent"
              FontWeight="Bold"
              IsChecked="{Binding Status.IsConnected, Mode=TwoWay}"  />
  </StackPanel>
</UserControl>
